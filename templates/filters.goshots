<!DOCTYPE HTML>
<html>
<head>
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">

  <title>{{.Provider.PrettyName}} - Filters</title>

  <link href='http://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700|Open+Sans:300italic,400,300,700' rel='stylesheet' type='text/css'>
  <link rel="shortcut icon" href="{{.StaticRoot}}favicon.ico">
  <link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/semantic-ui/0.16.1/css/semantic.min.css">

  <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
  <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/semantic-ui/0.16.1/javascript/semantic.min.js"></script>

  <style>

    html, body {
      font-size: 15px;
    }

    body {
      font-family: "Open Sans", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
      color: #333333;
      background-color: #FCFCFC;
    }

    .ui.buttons .or:after {
      border-color: transparent;
    }

    .ui.form .field, .ui.form .grouped.fields {
      margin: 0;
    }

    .ui.form .grouped.fields :first-child {
      margin-top: 0;
    }

    .ui.form .grouped.fields :last-child {
      margin-bottom: 0;
    }

    .ui.page.grid > .row {
      padding: 0;
    }

    .ui.segment {
      padding: 0.75em;
    }

    .ui.select-holder {
      padding: 0;
    }

    select.goshots {
      width: 100%;
      font-family: "Open Sans", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
      color: #333333;
      font-size: 1em;
      border-width: 0;
      padding: 0.5em;
    }

    /* makes it look better in Firefox / mobile Chrome */
    select.goshots {
      background-color: #FFFFFF;
    }

    select.goshots:disabled {
      color: #A5A5A5;
    }

    .ui.header.attached {
      background-color: #EEEEEE !important;
    }

    .ui.header.attached.selected {
      background-color: #30A050 !important;
    }

    .ui.header.attached * {
      color: #777777;
    }

    .ui.header.attached.selected * {
      color: white;
    }

    .ui.header.attached, .ui.segment.attached {
      box-shadow: 0 0 0 1px #CCCCCC;
      -webkit-box-shadow: 0 0 0 1px #CCCCCC;
    }

    .ui.header.attached.selected, .ui.segment.attached.selected {
      box-shadow: 0 0 0 1px #777777;
      -webkit-box-shadow: 0 0 0 1px #777777;
    }

    .ui.return.button {
      min-width: 12em;
      box-shadow: #CCCCCC 0px 0px 0px 1px inset;
      -webkit-box-shadow: #CCCCCC 0px 0px 0px 1px inset;
    }

    .ui.positive.return.button {
      min-width: 12em;
      background-color: #30A050 !important;
      box-shadow: #777777 0px 0px 0px 1px inset;
      -webkit-box-shadow: #777777 0px 0px 0px 1px inset;
    }

    .ui.positive.return.button:hover {
      background-color: #50C070 !important;
    }

    /* workaround for bizarre bug where original radio button style shows through */
    input[type="radio"]:disabled {
        visibility: hidden;
    }

    /* typically within mobile portrait mode */
    @media (max-width: 500px) {
      html, body {
        font-size: 12.5px;
      }
      /* bizarre Chrome behavior fix */
      .ui.select-holder {
        padding-bottom: 1px;
      }
    }

  </style>

  <script>

    function isChecked(idx) {
      return $('.filter-' + idx + '.checkbox > input[type="checkbox"]').prop('checked');
    }

    function updateFilterDisableState(idx) {
      checked = isChecked(idx);
      $('.filter-' + idx + '.segment select').prop('disabled', !checked);
      $('.filter-' + idx + '.segment input').prop('disabled', !checked);
      if (checked) {
        $('.filter-' + idx + '.header').addClass('inverted');
        $('.filter-' + idx + '.header').addClass('selected');
        $('.filter-' + idx + '.segment').addClass('selected');
        $('.filter-' + idx + '.segment .field').removeClass('disabled');
      } else {
        $('.filter-' + idx + '.header').removeClass('inverted');
        $('.filter-' + idx + '.header').removeClass('selected');
        $('.filter-' + idx + '.segment').removeClass('selected');
        $('.filter-' + idx + '.segment .field').addClass('disabled');
      }
    }

    function setupFilterCheckbox(idx) {
      updateFilterDisableState(idx);
      $('.filter-' + idx + '.checkbox').on('change', function() {
        updateFilterDisableState(idx);
      });
    }

    function saveCookie(name, value) {
      var today = new Date();
      var expire = new Date();
      if (value == '') {
        expire.setTime(today.getTime() - (3600000 * 24 * 30)); // -30 days
      } else {
        expire.setTime(today.getTime() + (3600000 * 24 * 30)); // 30 days
      }
      document.cookie = name + '=' + value + ';expires=' + expire.toGMTString();
    }

    function okClicked() {

      var cookie = [];

      {{range $filterIdx, $filter := .DisplayFilters}}

      if (isChecked({{$filterIdx}})) {
        {{if $filter.IsNumber}}

          cookie[cookie.length] = {Enabled: true, Values:[
            parseInt($('#num-{{$filterIdx}}').val().replace(/[^0-9-]/,""),10)]};

        {{else if $filter.IsNumberRange}}

          cookie[cookie.length] = {Enabled: true, Values:[
            parseInt($('#num1-{{$filterIdx}}').val().replace(/[^0-9-]/,""),10), 
            parseInt($('#num2-{{$filterIdx}}').val().replace(/[^0-9-]/,""),10)]};

        {{else if $filter.IsRadio}}

          temp = []
          {{range $optionIdx, $option := $filter.Options }}
            if ($('#radio-{{$filterIdx}}-{{$optionIdx}}').prop('checked')) {
              temp[temp.length] = {{$optionIdx}};
            }
          {{end}}
          cookie[cookie.length] = {Enabled: true, Values: temp};

        {{else if $filter.IsMultiSelect}}

          temp = []
          {{range $optionIdx, $option := $filter.Options }}
            if ($('#option-{{$filterIdx}}-{{$optionIdx}}').prop('selected')) {
              temp[temp.length] = {{$optionIdx}};
            }
          {{end}}
          cookie[cookie.length] = {Enabled: true, Values: temp};

        {{end}}
      } else {
        cookie[cookie.length] = {Enabled: false, Values: []};
      }

      {{end}}

      saveCookie('{{.Provider.ShortName}}_filters', encodeURIComponent(JSON.stringify(cookie)));

      window.location.href = '{{.ReturnPage}}';
    }

    function cancelClicked() {
      window.location.href = '{{.ReturnPage}}';
    }

    $(function() {
      $('.ui.checkbox').checkbox();
      for (var i = 0; i < {{len .DisplayFilters}}; i++) {
        setupFilterCheckbox(i);
      }
      $('.ui.numeric.input > input').on('input', function() {
        if (isNaN($(this).val())) {
          $(this).parent().addClass('error');
          $(this).parent().find('.corner.label').removeClass('hidden');
        } else {
          $(this).parent().removeClass('error');
          $(this).parent().find('.corner.label').addClass('hidden');
        }
      });
    {{if .ShowNotFoundPopup}}
    $('.modal').modal('show');
    {{end}}
    });

  </script>
</head>

<body>

<div class="ui one column page grid">
<div class="one column row">
  <div class="column">
    <h2 class="ui dividing header">
      {{.Provider.PrettyName}} - Filters
    </h2>
  </div>
</div>
</div>

<div class="ui modal">
  <div class="header">
    Result Not Found
  </div>
  <div class="content">
    Nothing was found for the selected filters. Try again!
  </div>
  <div class="actions">
    <div class="ui button">
      Okay
    </div>
  </div>
</div>

<div class="ui two column page grid">

{{range $filterIdx, $filter := .DisplayFilters}}

{{if $filter.IsFirstInRow}}
<div class="two column row">
{{end}}

  <div class="column">
    <h5 class="ui filter-{{$filterIdx}} top attached header">
      <div class="ui filter-{{$filterIdx}} checkbox">
        <input type="checkbox" {{if $filter.IsEnabled}}checked{{end}}>
        <label class="goshots header">{{$filter.Filter.Name}}</label>
      </div>
    </h5>
    <div class="ui filter-{{$filterIdx}} attached {{if $filter.IsMultiSelect}}select-holder{{end}} form segment">

    {{if $filter.IsNumber}}

    <div class="field">
      <label>{{$filter.Filter.Prompt}}</label>
      <div class="ui fluid labeled numeric input">
        <input type="text" id="num-{{$filterIdx}}" name="number" placeholder="(number)" value="{{$filter.NumValue1}}">
        <div class="ui corner orange label hidden">
          <i class="exclamation icon"></i>
        </div>
      </div>
    </div>

    {{else if $filter.IsNumberRange}}

    <div class="two fields">
      <div class="field">
        <label>{{$filter.Filter.Prompt}} between</label>
        <div class="ui fluid labeled numeric input">
          <input type="text" id="num1-{{$filterIdx}}" name="number" placeholder="(number)" value="{{$filter.NumValue1}}">
          <div class="ui hidden corner orange label">
            <i class="exclamation icon"></i>
          </div>
        </div>
      </div>
      <div class="field">
        <label>and</label>
        <div class="ui fluid labeled numeric input">
          <input type="text" id="num2-{{$filterIdx}}" name="number" placeholder="(number)" value="{{$filter.NumValue2}}">
          <div class="ui hidden corner orange label">
            <i class="exclamation icon"></i>
          </div>
        </div>
      </div>
    </div>

    {{else if $filter.IsRadio}}

    <div class="grouped inline fields">

      {{range $optionIdx, $option := $filter.Options}}

      <div class="field">
        <div class="ui radio checkbox">
          <input type="radio" id="radio-{{$filterIdx}}-{{$optionIdx}}" name="radio-filter-{{$filterIdx}}" {{if $option.IsSelected}}checked{{end}}>
          <label>{{$option.Name}}</label>
        </div>
      </div>

      {{end}}

    </div>

    {{else if $filter.IsMultiSelect}}

    <select multiple size="8" class="goshots">

      {{range $optionIdx, $option := $filter.Options}}
        <option id="option-{{$filterIdx}}-{{$optionIdx}}" {{if $option.IsSelected}}selected{{end}}>{{$option.Name}}</option>
      {{end}}

    </select>

    {{end}}

    </div>
  </div>

{{if $filter.IsLastInRow}}
</div>
{{end}}

{{end}}

</div>

<div class="ui one column page grid">

<div class="one column row">
<div class="column">
<div class="ui divider" style="margin-bottom: 0;">
</div>
</div>
</div>

<div class="one column row">
  <div class="column">
    <div class="ui buttons">
      <div class="ui positive return submit button" onclick="okClicked()">
        Save Filters
        <i class="checkmark icon"></i>
      </div>
      <div class="or"></div>
      <div class="ui return button" onclick="cancelClicked()">Cancel</div>
    </div>
  </div>
</div>
</div>

</body>
</html>
